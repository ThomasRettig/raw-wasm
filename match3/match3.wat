;; Memory map:
;;
;; [0x00000 .. 0x00000]  X mouse position
;; [0x00001 .. 0x00001]  Y mouse position
;; [0x00002 .. 0x00002]  mouse buttons
;; [0x000c0 .. 0x00100]  16 RGBA colors       u32[16]
;; [0x00100 .. 0x01100]  16x16x1 Bpp sprites  u8[8][256]
;; [0x03000 .. 0x03040]  8x8 grid bitmap  u64[8]
;; [0x10000 .. 0x25f90]  150x150xRGBA data (4 bytes per pixel)
(memory (export "mem") 3)

(data (i32.const 0x3000)
  ;; bitmap grid
  (i64
    0x55aa55aa55aa55aa   ;; cells 0
    0xaa55aa55aa55aa55   ;; cells 1
    0
    0
    0
    0
    0
    0)
)

(func (export "run")
  (call $clear-screen (i32.const 0)) ;; transparent black

  (call $draw-grid (i64.load (i32.const 0x3000)) (i32.const 0x100))
  (call $draw-grid (i64.load (i32.const 0x3008)) (i32.const 0x400))
)

(func $draw-grid (param $bits i64) (param $gfx-src i32)
  (local $idx i32)
  (loop $loop
    ;; Exit the function if bits == 0
    (br_if 1 (i64.eqz (local.get $bits)))

    ;; Get the index of the lowest set bit
    (local.set $idx (i32.wrap_i64 (i64.ctz (local.get $bits))))

    ;; Draw the cell at that index
    (call $draw-cell
      ;; x-coordinate: 7 + (idx & 7) * 17
      (i32.add
        (i32.const 7)
        (i32.mul
          (i32.and (local.get $idx) (i32.const 7))
          (i32.const 17)))
      ;; y-coordinate: (150 - 17 - 7) - (idx >> 3) * 17
      (i32.sub
        (i32.const 126)
        (i32.mul
          (i32.shr_u (local.get $idx) (i32.const 3))
          (i32.const 17)))
      ;; src => idx >> 2
      (i32.shl (local.get $idx) (i32.const 2))
      (local.get $gfx-src))

    ;; Clear the lowest set bit: bits &= bits - 1
    (local.set $bits
      (i64.and
        (local.get $bits)
        (i64.sub (local.get $bits) (i64.const 1))))

    ;; Always loop
    (br $loop)
  )
)

(func $draw-cell (param $x i32) (param $y i32) (param $i i32) (param $src i32) 
  (call $draw-sprite
    (local.get $x)
    (local.get $y)
    (local.get $src)
    (i32.const 16)  ;; sw
    (i32.const 16)  ;; sh
    (i32.const 16)  ;; dw
    (i32.const 16)) ;; dh
)

(func $clear-screen (param $color i32)
  (local $i i32)
  (loop $loop
    ;; mem[0x10000 + i] = color
    (i32.store offset=0x10000 (local.get $i) (local.get $color))

    ;; i += 4
    (local.set $i (i32.add (local.get $i) (i32.const 4)))

    ;; loop if i < 90000
    (br_if $loop (i32.lt_s (local.get $i) (i32.const 90000)))
  )
)

(func $put-pixel (param $x i32) (param $y i32) (param $palidx i32)
  ;; return if the x/y coordinate is out of bounds
  (br_if 0
    (i32.or
      (i32.ge_u (local.get $x) (i32.const 150))
      (i32.ge_u (local.get $y) (i32.const 150))))

  ;; color = mem[0xc0 + (palidx << 2)]
  ;; mem[0x10000 + (y * 150 + x) * 4] = color
  (i32.store offset=0x10000
    (i32.mul
      (i32.add
        (i32.mul (local.get $y) (i32.const 150))
        (local.get $x))
      (i32.const 4))
    (i32.load offset=0xc0
      (i32.shl (local.get $palidx) (i32.const 2))))
)

(func $draw-sprite (param $x i32) (param $y i32)
                   (param $src i32)
                   (param $sw i32) (param $sh i32)
                   (param $dw i32) (param $dh i32)
  (local $i i32)
  (local $j i32)
  (local $palidx i32)
  (local $dx f32)
  (local $dy f32)

  ;; dx = sw / dw
  (local.set $dx
    (f32.div (f32.convert_i32_s (local.get $sw))
             (f32.convert_i32_s (local.get $dw))))
  ;; dy = sh / dh
  (local.set $dy
    (f32.div (f32.convert_i32_s (local.get $sh))
             (f32.convert_i32_s (local.get $dh))))

  ;; for (j = 0; j < dh; j++)
  (loop $y-loop
    (local.set $i (i32.const 0))
    ;; for (i = 0; i < dw; i++)
    (loop $x-loop
      ;; pixel = mem[src + (sw * j * dy + i * dx)]
      (local.set $palidx
        (i32.load8_u
          (i32.add
            (i32.add
              (i32.mul
                (local.get $sw)
                (i32.trunc_f32_s
                  (f32.mul
                    (f32.convert_i32_s (local.get $j))
                    (local.get $dy))))
              (i32.trunc_f32_s
                (f32.mul
                  (f32.convert_i32_s (local.get $i))
                  (local.get $dx))))
            (local.get $src))))

      ;; if (palidx != 0)
      (if (local.get $palidx)
        (then
          ;; put-pixel(x + i, y + j, palidx)
          (call $put-pixel
            (i32.add (local.get $x) (local.get $i))
            (i32.add (local.get $y) (local.get $j))
            (local.get $palidx))))

      ;; i += 1
      (local.set $i (i32.add (local.get $i) (i32.const 1)))

      ;; loop if i < w
      (br_if $x-loop (i32.lt_s (local.get $i) (local.get $dw)))
    )
    ;; j += 1
    (local.set $j (i32.add (local.get $j) (i32.const 1)))

    ;; loop if j < h
    (br_if $y-loop (i32.lt_s (local.get $j) (local.get $dh)))
  )
)

(data (i32.const 0xc0)
  ;; 16 palette entries
  "\00\00\00\00\df\71\26\ff\fb\f2\36\ff\66\39\31\ff"
  "\ac\32\32\ff\63\9b\ff\ff\5f\cd\e4\ff\d9\57\63\ff"
  "\cb\db\fc\ff\8f\56\3b\ff\45\28\3c\ff\5b\6e\e1\ff"
  "\99\e5\50\ff\46\00\60\ff\80\00\94\ff\ff\ff\ff\ff"

  ;; sprite data
  "\00\00\00\00\00\00\01\01\01\01\00\00\00\00\00\00"
  "\00\00\00\00\01\01\02\02\02\02\01\01\00\00\00\00"
  "\00\00\00\01\02\02\02\02\02\02\02\02\01\00\00\00"
  "\00\00\01\02\02\02\02\02\02\02\02\02\02\01\00\00"
  "\00\01\02\02\02\02\03\03\02\02\03\03\02\02\01\00"
  "\00\01\02\02\02\02\03\03\02\02\03\03\02\02\01\00"
  "\01\02\02\02\02\02\03\03\02\02\03\03\02\02\02\01"
  "\01\02\03\02\02\02\03\03\02\02\03\03\02\03\02\01"
  "\01\02\03\03\02\02\02\02\02\02\02\02\02\03\02\01"
  "\01\02\03\03\03\03\03\03\03\03\03\03\03\03\02\01"
  "\00\01\02\03\0f\0f\0f\0f\0f\0f\0f\0f\03\02\01\00"
  "\00\01\02\02\03\03\03\03\03\03\03\03\02\02\01\00"
  "\00\00\01\02\02\03\03\03\03\03\03\02\02\01\00\00"
  "\00\00\00\01\02\02\02\03\03\03\02\02\01\00\00\00"
  "\00\00\00\00\01\01\02\02\02\02\01\01\00\00\00\00"
  "\00\00\00\00\00\00\01\01\01\01\00\00\00\00\00\00"
  "\00\00\00\01\00\00\01\01\01\01\00\00\01\00\00\00"
  "\00\00\01\04\01\01\02\02\02\02\01\01\04\01\00\00"
  "\01\01\04\04\04\01\01\01\02\01\01\04\04\04\01\01"
  "\04\04\04\04\04\04\04\04\01\04\04\04\04\04\04\04"
  "\04\04\04\04\04\04\04\01\02\04\04\04\04\04\04\04"
  "\01\04\04\04\04\04\01\02\02\01\04\04\04\04\04\01"
  "\01\04\04\04\04\04\01\02\02\01\04\04\04\04\04\01"
  "\01\04\04\01\04\04\01\02\02\01\04\04\01\04\04\01"
  "\00\04\01\02\01\04\01\02\02\01\04\01\02\01\04\00"
  "\00\01\02\01\01\01\01\01\01\01\01\01\01\02\01\00"
  "\00\01\02\03\0f\0f\0f\0f\0f\0f\0f\0f\03\02\01\00"
  "\00\01\02\02\03\03\03\03\03\03\03\03\01\02\01\00"
  "\00\00\01\02\02\03\0f\0f\0f\0f\0f\01\02\01\00\00"
  "\00\00\00\01\02\02\01\03\03\03\01\02\01\00\00\00"
  "\00\00\00\00\01\01\02\02\02\02\01\01\00\00\00\00"
  "\00\00\00\00\00\00\01\01\01\01\00\00\00\00\00\00"
  "\00\00\00\00\00\00\01\01\01\01\00\00\00\00\00\00"
  "\00\00\00\00\01\01\04\04\04\04\01\01\00\00\00\00"
  "\00\00\00\01\04\04\04\04\04\04\04\04\01\00\00\00"
  "\00\00\01\04\04\04\04\04\04\04\04\04\04\01\00\00"
  "\00\01\04\04\04\03\03\04\04\03\03\04\04\04\01\00"
  "\00\01\04\04\03\03\04\04\04\04\03\03\04\04\01\00"
  "\01\04\04\03\03\04\04\04\04\04\04\03\03\04\04\01"
  "\01\04\04\04\04\04\04\04\04\04\04\04\04\04\04\01"
  "\01\04\04\04\04\03\03\04\04\03\03\04\04\04\04\01"
  "\01\04\04\05\04\03\03\04\04\03\03\04\04\04\04\01"
  "\00\01\04\06\04\04\04\04\04\04\04\04\04\04\01\00"
  "\00\01\05\06\05\04\04\04\04\04\04\04\04\04\01\00"
  "\00\05\06\06\06\05\03\03\03\03\03\04\04\01\00\00"
  "\00\05\06\06\06\05\03\07\03\07\03\04\01\00\00\00"
  "\00\00\05\06\05\01\03\07\07\07\03\01\00\00\00\00"
  "\00\00\00\05\00\00\01\07\07\07\00\00\00\00\00\00"
  "\00\00\00\00\00\00\06\06\06\06\00\00\00\00\00\00"
  "\00\00\00\00\06\06\05\05\05\05\06\06\00\00\00\00"
  "\00\00\00\06\05\05\05\05\05\05\05\05\06\00\00\00"
  "\00\00\06\05\05\05\05\05\05\05\05\05\05\06\00\00"
  "\00\06\05\05\05\05\05\05\05\05\05\05\05\05\06\00"
  "\00\06\05\05\05\05\05\05\05\05\05\05\05\05\06\00"
  "\06\05\05\05\05\03\03\05\05\05\03\03\05\05\05\06"
  "\06\05\05\05\05\03\03\05\05\05\03\03\05\05\05\06"
  "\06\05\05\05\05\05\05\05\05\05\05\05\05\05\05\06"
  "\06\05\05\05\05\05\05\05\05\05\05\05\05\05\05\06"
  "\08\06\05\05\0f\03\0f\0f\03\0f\0f\03\0f\05\06\00"
  "\08\06\05\05\03\03\03\03\03\03\03\03\03\05\06\00"
  "\08\00\08\05\0f\03\0f\0f\03\0f\0f\03\0f\06\08\00"
  "\00\00\08\06\05\05\05\05\05\05\05\05\06\00\08\00"
  "\00\00\08\00\06\06\05\05\05\05\06\06\08\00\08\00"
  "\00\00\00\00\08\00\06\06\06\06\00\00\08\00\00\00"
  "\00\00\00\00\00\00\03\03\03\03\00\00\00\00\00\00"
  "\00\00\00\00\00\03\03\03\03\03\03\00\00\00\00\00"
  "\00\03\03\00\03\03\03\03\03\03\03\03\00\03\03\00"
  "\03\03\03\03\03\03\03\09\09\09\03\03\03\03\03\03"
  "\03\03\03\03\03\03\09\09\09\09\03\03\03\03\03\03"
  "\03\0a\0a\0a\0a\0a\09\09\09\09\09\0a\0a\0a\0a\03"
  "\03\01\02\02\02\0a\0a\0a\0a\0a\0a\0a\02\02\01\03"
  "\00\01\02\02\02\02\02\02\02\02\02\02\02\02\01\00"
  "\00\01\02\02\02\02\03\03\02\02\03\03\02\02\01\00"
  "\00\01\02\02\02\02\03\03\02\02\03\03\02\02\01\00"
  "\00\01\02\02\02\02\02\02\02\02\02\02\02\02\01\00"
  "\00\01\02\02\03\03\03\03\03\03\03\03\02\02\01\00"
  "\00\00\01\02\02\03\03\03\03\03\03\02\02\01\00\00"
  "\00\00\00\01\02\02\02\03\03\03\02\02\01\00\00\00"
  "\00\00\00\00\01\01\02\02\02\02\01\01\00\00\00\00"
  "\00\00\00\00\00\00\01\01\01\01\00\00\00\00\00\00"
  "\00\00\00\00\00\00\0b\0b\0b\0b\00\00\00\00\00\00"
  "\00\00\00\00\0b\0b\0f\0f\0f\0f\0b\0b\00\00\00\00"
  "\00\00\00\0b\08\0f\08\0f\08\0f\08\0f\0b\00\00\00"
  "\00\00\0b\08\05\03\05\08\05\08\05\03\05\0b\00\00"
  "\00\0b\05\05\03\0f\03\05\05\05\03\0f\03\05\0b\00"
  "\00\0b\05\03\0f\0f\0f\03\05\03\0f\0f\0f\03\0b\00"
  "\0b\05\05\03\0f\0f\0f\03\05\03\0f\0f\0f\03\05\0b"
  "\0b\0c\0c\03\0f\0f\0f\03\0c\03\0f\0f\0f\03\0c\0b"
  "\0b\0c\0c\0c\03\0f\03\0c\0c\0c\03\0f\03\0c\0c\0b"
  "\01\02\0c\02\0c\02\0c\02\03\03\02\0c\02\0c\02\01"
  "\00\01\02\02\02\02\02\03\03\03\03\02\02\02\01\00"
  "\00\01\01\01\02\02\02\03\03\03\03\02\02\01\01\00"
  "\00\01\02\02\01\02\02\03\03\03\03\02\01\02\02\01"
  "\00\01\02\02\01\02\02\02\03\03\02\02\01\02\02\01"
  "\01\02\02\02\01\01\02\02\02\02\01\01\01\02\02\01"
  "\01\02\02\01\00\00\01\01\01\01\00\00\00\01\02\02"
  "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
  "\0d\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0d"
  "\0d\0d\00\00\00\00\00\00\00\00\00\00\00\00\0d\0d"
  "\0d\0e\0d\0d\00\0d\0d\0d\0d\0d\0d\0d\00\0d\0d\0d"
  "\0d\0e\0e\0e\0d\0e\0e\0e\0e\0e\0e\0e\0d\0e\0e\0d"
  "\0d\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0d"
  "\00\0d\0d\0e\0e\0a\0a\0a\0e\0e\0e\0a\0a\0a\0d\0d"
  "\00\0d\0e\0e\0e\0e\0a\0a\0a\0e\0a\0a\0a\0e\0d\00"
  "\00\0d\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0d\00"
  "\00\0d\0e\0e\0e\0e\0e\0a\0a\0e\0a\0a\0e\0e\0d\00"
  "\00\0d\0e\0e\0e\0e\0e\0a\0a\0e\0a\0a\0e\0e\0d\00"
  "\00\00\0d\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0d\00\00"
  "\00\00\0d\0e\0e\0e\0a\0a\0a\0a\0a\0a\0e\0d\00\00"
  "\00\00\00\0d\0e\0e\0e\0a\0a\0a\0a\0e\0d\00\00\00"
  "\00\00\00\00\0d\0d\0e\0e\0e\0e\0d\0d\00\00\00\00"
  "\00\00\00\00\00\00\0d\0d\0d\0d\00\00\00\00\00\00"
  "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
  "\00\00\00\00\00\00\00\03\03\00\00\00\00\00\00\00"
  "\00\00\00\00\00\00\00\03\03\03\00\00\00\00\00\00"
  "\00\00\00\00\00\00\0a\03\03\03\03\00\00\00\00\00"
  "\00\00\00\00\00\0a\0a\0a\0a\0a\0a\00\00\00\00\00"
  "\00\00\00\00\00\03\0a\0a\0a\0a\0a\0a\00\00\00\00"
  "\00\00\00\00\03\03\0f\0f\03\03\0f\0f\03\00\00\00"
  "\00\00\00\00\0a\0a\0f\0a\03\03\0f\0a\03\03\00\00"
  "\00\00\00\0a\0a\0a\0f\0f\0a\0a\0f\0f\0a\0a\00\00"
  "\00\00\00\03\03\0a\0a\0a\0a\0a\0a\0a\0a\0a\0a\00"
  "\00\00\03\03\03\03\03\03\03\03\03\03\03\03\03\00"
  "\00\0a\0a\03\03\03\0f\0f\0f\0f\0f\0f\03\03\03\03"
  "\00\0a\0a\0a\0a\0a\0a\0f\0f\0f\0f\0a\0a\0a\0a\0a"
  "\00\03\03\0a\0a\0a\0a\0a\0a\0a\0a\0a\0a\0a\0a\0a"
  "\00\00\00\03\03\03\03\03\03\03\03\03\03\03\03\00"
  "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
)
